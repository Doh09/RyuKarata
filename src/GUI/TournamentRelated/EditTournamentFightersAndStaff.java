/*
 * This GUI class is used to CRUD Fighters/StaffPersons of a tournament, along with importing/exporting
 * them from/to an Excel file.
 * The class has loading bars that will show the progress of loading in fighters/staff persons.
 */
package GUI.TournamentRelated;

import BE.Fighter;
import BE.StaffPerson;
import BE.Tournaments.Abstract_Tournament;
import BLL.Managers.Singleton_Managers.ExcelManager;
import GUI.ColLookerFighterStaff;
import BLL.Facades.FacadeToBLL;
import BLL.TournamentTypes.SuperTournament;
import GUI.FighterLookerGUI;
import GUI.MainGUI;
import GUI.StaffLookerGUI;
import GUI.TableModels_And_Tables.FighterTableModel;
import GUI.TableModels_And_Tables.StaffTableModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Simon, Martin, Alex, Casper
 */
public class EditTournamentFightersAndStaff extends javax.swing.JDialog {

    /**
     * Variables
     *
     */
    //Language strings
    private String txtTitle = "Rediger turnering";
    private String txtPnlDetails = "Turneringsdetaljer";
    private String txtLblName = "Turneringsnavn";

    //General
    private MainGUI parent;
    private FacadeToBLL facadeToBLL = FacadeToBLL.getInstance();
    private FighterTableModel fighterModel;
    private StaffTableModel staffModel;
    private String type;
    private boolean edit;
    private SuperTournament st; //used it editing from a super-tournament.
    private Abstract_Tournament at; //used if editing from a sub-tournament.

    /**
     * Creates new form EditFightersInTournament
     *
     * @param parent
     * @param type
     * @param fighterList
     * @param staffList
     * @param at
     */
    public EditTournamentFightersAndStaff(MainGUI parent, String type, ArrayList<Fighter> fighterList, ArrayList<StaffPerson> staffList,
            SuperTournament superTournament, Abstract_Tournament at) {
        super(parent, true);
        this.st = superTournament;
        this.at = at;
        
        initComponents();
        this.parent = parent;
        this.type = type;

        fighterModel = new FighterTableModel(fighterList);
        staffModel = new StaffTableModel(staffList);
        tblFighters.setModel(fighterModel);
        tblStaff.setModel(staffModel);
        addDoubleClickListener();
        setLocationRelativeTo(null);
        setVisible(true);
    }

    private void addDoubleClickListener() {
        tblFighters.addMouseListener(new MouseAdapter() { //Add fighter table listener.
            public void mousePressed(MouseEvent meFighter) {

                if (meFighter.getClickCount() == 2) { //If table is double clicked.
                    // your valueChanged overridden method 
                    btnEditFighterActionPerformed(null);
                }
            }
        });
        tblStaff.addMouseListener(new MouseAdapter() { //Add staff table listener.
            public void mousePressed(MouseEvent meStaff) {

                if (meStaff.getClickCount() == 2) { //If table is double clicked.
                    // your valueChanged overridden method
                    btnEditPersonActionPerformed(null);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlFighter = new javax.swing.JPanel();
        sclFighters = new javax.swing.JScrollPane();
        tblFighters = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        ckbFighterAddPre2007 = new javax.swing.JCheckBox();
        btnExportFighter = new javax.swing.JButton();
        btnRemoveFighter = new javax.swing.JButton();
        btnEditFighter = new javax.swing.JButton();
        btnCreateAFighter = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        btnImportFromExcel = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        prbFighter = new javax.swing.JProgressBar();
        jPanel7 = new javax.swing.JPanel();
        prbStaff = new javax.swing.JProgressBar();
        jToolBar1 = new javax.swing.JToolBar();
        btnCancel = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        btnSaveChanges = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        sclStaff = new javax.swing.JScrollPane();
        tblStaff = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        btnEditPerson = new javax.swing.JButton();
        btnRemovePerson = new javax.swing.JButton();
        btnCreateAPerson = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Rediger turneringsdeltagere- og stabsmedlemmer");

        pnlFighter.setBorder(javax.swing.BorderFactory.createTitledBorder("Kæmpere"));

        tblFighters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1"
            }
        ));
        sclFighters.setViewportView(tblFighters);

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Kæmpermenu"));

        ckbFighterAddPre2007.setText("Brug Excel fra før 2007");

        btnExportFighter.setText("Eksport valgt kæmper");
        btnExportFighter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportFighterActionPerformed(evt);
            }
        });

        btnRemoveFighter.setText("Fjern markeret kæmper");
        btnRemoveFighter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveFighterActionPerformed(evt);
            }
        });

        btnEditFighter.setText("Inspicer og/eller ændre kæmper");
        btnEditFighter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditFighterActionPerformed(evt);
            }
        });

        btnCreateAFighter.setText("Tilføj en enkelt kæmper");
        btnCreateAFighter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAFighterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRemoveFighter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreateAFighter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditFighter, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 198, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ckbFighterAddPre2007, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnExportFighter, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreateAFighter)
                    .addComponent(btnExportFighter))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditFighter)
                    .addComponent(ckbFighterAddPre2007))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemoveFighter)
                .addGap(31, 31, 31))
        );

        javax.swing.GroupLayout pnlFighterLayout = new javax.swing.GroupLayout(pnlFighter);
        pnlFighter.setLayout(pnlFighterLayout);
        pnlFighterLayout.setHorizontalGroup(
            pnlFighterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFighterLayout.createSequentialGroup()
                .addGroup(pnlFighterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlFighterLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(sclFighters, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlFighterLayout.setVerticalGroup(
            pnlFighterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlFighterLayout.createSequentialGroup()
                .addComponent(sclFighters, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Menu"));

        btnImportFromExcel.setText("Importer fra Excel fil");
        btnImportFromExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnImportFromExcelActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Loading bar kæmpere"));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(prbFighter, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(77, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(prbFighter, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Loading bar stabsmedlemmer"));

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(prbStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addComponent(prbStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnImportFromExcel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnImportFromExcel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        jToolBar1.setBorder(javax.swing.BorderFactory.createTitledBorder("Afslutningsmenu"));
        jToolBar1.setFloatable(false);
        jToolBar1.setRollover(true);

        btnCancel.setText("Annuller");
        btnCancel.setFocusable(false);
        btnCancel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancel.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jToolBar1.add(btnCancel);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 735, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 27, Short.MAX_VALUE)
        );

        jToolBar1.add(jPanel3);

        btnSaveChanges.setText("Gem ændringer");
        btnSaveChanges.setFocusable(false);
        btnSaveChanges.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnSaveChanges.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnSaveChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveChangesActionPerformed(evt);
            }
        });
        jToolBar1.add(btnSaveChanges);

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder("Stabsmedlemmer"), "Stabsmedlemmer"));

        tblStaff.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1"
            }
        ));
        sclStaff.setViewportView(tblStaff);

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Stabsmedlemsmenu"));

        btnEditPerson.setText("Inspicer og/eller ændre stabsmedlem");
        btnEditPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditPersonActionPerformed(evt);
            }
        });

        btnRemovePerson.setText("Fjern markeret stabsmedlem");
        btnRemovePerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemovePersonActionPerformed(evt);
            }
        });

        btnCreateAPerson.setText("Tilføj et enkelt stabsmedlem");
        btnCreateAPerson.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAPersonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnEditPerson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCreateAPerson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnRemovePerson, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(btnCreateAPerson)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnEditPerson)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemovePerson)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(sclStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(sclStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlFighter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jToolBar1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlFighter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreateAFighterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAFighterActionPerformed
        FighterLookerGUI fighterLooker;
        if (st != null) {
            fighterLooker = new FighterLookerGUI(parent, true, st, null);
            st.getFighterManager().mergeFighterCollections(fighterModel.getFighterList());

        } else {
            fighterLooker = new FighterLookerGUI(parent, true, null, at);
            at.getFighterManager().mergeFighterCollections(fighterModel.getFighterList());

        }
        fighterLooker.setLocationRelativeTo(null);
        fighterLooker.setVisible(true);
        if (st != null) {
            fighterModel.updateFighterList(st.getFighterManager().getAllAsArrayList());
        } else {
            fighterModel.updateFighterList(at.getFighterManager().getAllAsArrayList());
        }
    }//GEN-LAST:event_btnCreateAFighterActionPerformed

    private void btnRemoveFighterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFighterActionPerformed
        int index = tblFighters.getSelectedRow();
        if (index != -1) {
            Fighter fighter;
            if (st != null) {
                fighter = st.getFighterManager().getFighterByIndex(tblFighters.convertRowIndexToModel(index));
            } else {
                fighter = at.getFighterManager().getFighterByIndex(tblFighters.convertRowIndexToModel(index));
            }

            int value = JOptionPane.showConfirmDialog(this, "Er du sikker på du vil slette " + fighter.getName() + "?", "Advarsel", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

            if (value == JOptionPane.YES_OPTION) {
                if (st != null) {
                    st.getFighterManager().removeFighterFromMap(tblFighters.convertRowIndexToModel(index));

                } else {
                    at.getFighterManager().removeFighterFromMap(tblFighters.convertRowIndexToModel(index));

                }
                updateTheTables();
            }
        }
    }//GEN-LAST:event_btnRemoveFighterActionPerformed

    private void btnEditFighterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditFighterActionPerformed
        int index = tblFighters.getSelectedRow();
        if (index != -1) {
            FighterLookerGUI fighterUI;
            if (st != null) {
                fighterUI = new FighterLookerGUI(parent, true, st.getFighterManager().getFighterByIndex(tblFighters.convertRowIndexToModel(index)), st, null);
            } else {
                fighterUI = new FighterLookerGUI(parent, true, at.getFighterManager().getFighterByIndex(tblFighters.convertRowIndexToModel(index)), null, at);
            }
            fighterUI.setLocationRelativeTo(null);
            fighterUI.setVisible(true);

            updateTheTables();
        }
    }//GEN-LAST:event_btnEditFighterActionPerformed

    private void btnExportFighterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportFighterActionPerformed
        int index = tblFighters.getSelectedRow();
        if (index != -1) {
            boolean xls = ckbFighterAddPre2007.isSelected();
            Fighter fighter = at.getFighterManager().getFighterByIndex(tblFighters.convertRowIndexToModel(index));
            JFileChooser fc = new JFileChooser();

            fc.setDialogTitle("Vælg hvor filen skal gemmes");
            int returnVal = fc.showOpenDialog(null);

            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                String fileName = file.getAbsolutePath() + (xls ? ".xls" : ".xlsx");
                try {
                    ExcelManager.instance().writeFighter(fileName, fighter, at);
                } catch (IOException ex) {
                    ex.printStackTrace();
                }
            } else {
                System.err.println("NO FILE CHOSEN");
            }
        }

    }//GEN-LAST:event_btnExportFighterActionPerformed

    private void btnEditPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditPersonActionPerformed
        int index = tblStaff.getSelectedRow();
        if (index != -1) {
            StaffLookerGUI staffUI;

            if (st != null) {
                staffUI = new StaffLookerGUI(parent, true, st.getStaffManager().getStaffByIndex(tblStaff.convertRowIndexToModel(index)), st, null);
            } else {
                staffUI = new StaffLookerGUI(parent, true, at.getStaffManager().getStaffByIndex(tblStaff.convertRowIndexToModel(index)), null, at);
            }
            staffUI.setLocationRelativeTo(null);
            staffUI.setVisible(true);

            updateTheTables();

        }
    }//GEN-LAST:event_btnEditPersonActionPerformed

    private void btnRemovePersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemovePersonActionPerformed
        int index = tblStaff.getSelectedRow();
        if (index != -1) {
            StaffPerson staffperson;
            if (st != null) {
                staffperson = st.getStaffManager().getStaffByIndex(tblStaff.convertRowIndexToModel(index));
            } else {
                staffperson = at.getStaffManager().getStaffByIndex(tblStaff.convertRowIndexToModel(index));
            }
            int value = JOptionPane.showConfirmDialog(this, "Er du sikker på du vil slette " + staffperson.getName() + "?", "Advarsel", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

            if (value == JOptionPane.YES_OPTION) {
                if (st != null) {
                    st.getStaffManager().removePersonFromMap(tblStaff.convertRowIndexToModel(index));
                } else {
                    at.getStaffManager().removePersonFromMap(tblStaff.convertRowIndexToModel(index));
                }
                updateTheTables();
            }
        }
    }//GEN-LAST:event_btnRemovePersonActionPerformed

    private void btnCreateAPersonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAPersonActionPerformed
        StaffLookerGUI staffLooker;
        if (st != null) {
            staffLooker = new StaffLookerGUI(parent, true, st, null);
        } else {
            staffLooker = new StaffLookerGUI(parent, true, null, at);
        }
        staffLooker.setLocationRelativeTo(null);
        staffLooker.setVisible(true);

        updateTheTables();
    }//GEN-LAST:event_btnCreateAPersonActionPerformed

    private void btnImportFromExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnImportFromExcelActionPerformed
        ColLookerFighterStaff colLooker = new ColLookerFighterStaff(parent, true);
        colLooker.setLocationRelativeTo(null);
        colLooker.setVisible(true);

        if (colLooker.getFighterColLooker() != null && colLooker.getStaffColLooker() != null) {
            JFileChooser fc = new JFileChooser();
            fc.setDialogTitle("Vælg en Excel fil");
            fc.setCurrentDirectory(new java.io.File("."));

            FileNameExtensionFilter filter = new FileNameExtensionFilter("Excel filer", "xls", "xlsx");
            fc.setFileFilter(filter);

            int returnVal = fc.showDialog(getParent(), "Åben");

            Thread thread = new Thread(new Runnable() {

                @Override
                public void run() {
                    try {
                        int fighterLineStop = colLooker.getFighterLine();
                        int staffLineStop = colLooker.getStaffLine();

                        if (returnVal == JFileChooser.APPROVE_OPTION) {
                            File file = fc.getSelectedFile();
                            String fileName = file.getAbsolutePath();

                            //Sets the loading bar
                            int fighterNum = ExcelManager.instance().getFighterTotal(fighterLineStop, fileName, colLooker.getFighterColLooker());
                            setFighterBar(fighterNum);

                            int staffNum = ExcelManager.instance().getStaffNum(staffLineStop, fileName, colLooker.getStaffColLooker());
                            setStaffBar(staffNum);

                            //Creates
                            ExcelManager.instance().readFighter(fileName, fighterLineStop, colLooker.getFighterColLooker(), colLooker.getClubName(), st, at);

                            ExcelManager.instance().readStaff(fileName, staffLineStop, colLooker.getStaffColLooker(), colLooker.getClubName(), st, at);

                            updateTheTables();
                        }
                        if (returnVal == JFileChooser.ERROR_OPTION) {
                            System.err.println("An error orccored");
                        }

                    } catch (IOException ex) {
                        ex.printStackTrace();
                    }
                }
            });

            thread.start();

            thread.interrupt();
        }
    }//GEN-LAST:event_btnImportFromExcelActionPerformed

    private void updateTheTables() {
        //Update the Tables
        if (st != null) {
            fighterModel.updateFighterList(st.getFighterManager().getAllAsArrayList());
            staffModel.updateStaffMemberList(st.getStaffManager().getAllAsArrayList());
        } else {
            fighterModel.updateFighterList(at.getFighterManager().getAllAsArrayList());
            staffModel.updateStaffMemberList(at.getStaffManager().getAllAsArrayList());
        }
    }

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveChangesActionPerformed
        dispose();
    }//GEN-LAST:event_btnSaveChangesActionPerformed

    private void setFighterBar(int maxValue) {
        prbFighter.setMaximum(maxValue);

        Thread thread;
        thread = new Thread(new Runnable() {

            @Override
            public void run() {
                for (int i = 0; i <= maxValue; i += 1) {
                    final int progress = ExcelManager.instance().getFightersRead();
                    SwingUtilities.invokeLater(new Runnable() {
                        public void run() {
                            prbFighter.setValue(progress);
                        }
                    });
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException e) {
                    }
                }
            }
        }
        );

        thread.start();

        thread.interrupt();

        prbFighter.setValue(0);

    }

    private void setStaffBar(int maxValue) {
        prbStaff.setMaximum(maxValue);

        Thread thread;
        thread = new Thread(new Runnable() {

            @Override
            public void run() {
                for (int i = 0; i <= maxValue; i += 1) {
                    final int progress = ExcelManager.instance().getStaffsRead();
                    SwingUtilities.invokeLater(new Runnable() {
                        public void run() {
                            prbStaff.setValue(progress);
                        }
                    });
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException e) {
                    }
                }
            }
        }
        );

        thread.start();

        thread.interrupt();

        prbStaff.setValue(0);
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnCreateAFighter;
    private javax.swing.JButton btnCreateAPerson;
    private javax.swing.JButton btnEditFighter;
    private javax.swing.JButton btnEditPerson;
    private javax.swing.JButton btnExportFighter;
    private javax.swing.JButton btnImportFromExcel;
    private javax.swing.JButton btnRemoveFighter;
    private javax.swing.JButton btnRemovePerson;
    private javax.swing.JButton btnSaveChanges;
    private javax.swing.JCheckBox ckbFighterAddPre2007;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JPanel pnlFighter;
    private javax.swing.JProgressBar prbFighter;
    private javax.swing.JProgressBar prbStaff;
    private javax.swing.JScrollPane sclFighters;
    private javax.swing.JScrollPane sclStaff;
    private javax.swing.JTable tblFighters;
    private javax.swing.JTable tblStaff;
    // End of variables declaration//GEN-END:variables
}
